#!/usr/bin/env python
import rospy
import actionlib
from robotiq_2f_gripper_msgs.msg import CommandRobotiqGripperFeedback, CommandRobotiqGripperResult, CommandRobotiqGripperAction, CommandRobotiqGripperGoal
from std_msgs.msg import String
from geometry_msgs.msg import Point
from geometry_msgs.msg import Pose
from geometry_msgs.msg import PoseStamped
from geometry_msgs.msg import Twist
from geometry_msgs.msg import TwistStamped
from geometry_msgs.msg import Wrench
from geometry_msgs.msg import WrenchStamped
from scipy.spatial.transform import Rotation as R
import sys, select, termios, tty
import numpy as np
from numpy import linalg



#goal variables
cart_Pose = Pose()
cart_twist = Twist()
cp_point = Point()
cp_wrench = np.array([0,0,0,0,0,0])



class cart_dynamic_model:
    def __init__(self,m,CoM_x,COM_y,I,x,y,th):
        self.m = m
        self.phi = np.array([m, m*CoM_x, m*COM_y, I +  m*(CoM_x**2+COM_y**2)])
        self.x = x
        self.y = y
        self.th = th
        self.dx = 0
        self.dy = 0
        self.dth = 0
        self.dt = 0.01

        self.M = np.array([[self.phi[0], 0, -self.phi[1]*np.sin(self.th)-self.phi[2]*np.cos(self.th)],
                    [0, self.phi[0], self.phi[1]*np.cos(self.th)-self.phi[2]*np.sin(self.th)],
                    [-self.phi[1]*np.sin(self.th)-self.phi[2]*np.cos(self.th),   self.phi[1]*np.cos(self.th)-self.phi[2]*np.sin(self.th), self.phi[3]]])
        
        self.C = np.array([[0, 0,  self.dth*(self.phi[2]*np.sin(self.th)-self.phi[1]*np.cos(self.th))],
                        [0, 0, -self.dth*(self.phi[2]*np.cos(self.th)+self.phi[1]*np.sin(self.th))],
                        [0, 0, 0]])
        
        self.N = self.phi[0]*1.2
        self.F = np.zeros([9,9])
        self.Lambda = np.array([-np.sin(self.th), np.cos(self.th), 0])
        self.d_Lambda = np.array([-np.cos(self.th)*self.dth, -np.sin(self.th)*self.dth, 0])
        self.accel = np.array([0,0,0])

        self.dif = np.array([0,0,0,0,0,0])
        # self.lam = np.inv(self.Lambda*np.inv(self.M)*np.transpose(self.Lambda))*(self.Lambda*np.inv(self.M)*(u-self.C*self.d_q-N*d_q)+d_Lambda*d_q);


    def dynamics(self, pos_x, pos_y, f_applied):

        self.F = np.array


                [0, 0, (self.dth**2*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - ((- 2*np.cos(2*self.th)*self.phi[1]**2 + 4*np.sin(2*self.th)*self.phi[1]*self.phi[2] + 2*np.cos(2*self.th)*self.phi[2]**2)*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - ((2*np.cos(self.th)*np.sin(self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - 2*np.cos(self.th)*np.sin(self.th)*self.phi[2]**2)*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - ((f_applied[2] - self.dth*self.phi[0])*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) + (self.dth**2*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*(self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])), (self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]),             -(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)/(2*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])), (self.phi[0]*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) - (2*self.dth*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*(self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) + (self.dth*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])), (self.dth*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) + (((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0])*(self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]**2*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (pos_y*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (self.phi[3]*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (self.phi[3]*(f_applied[2] - self.dth*self.phi[0])*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2 + (pos_x*(self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - ((np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(2*self.phi[0]**2*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) + (self.phi[3]*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) - (self.phi[3]*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0])*(self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2),         ((2*self.phi[2]*np.cos(2*self.th) + 2*self.phi[1]*np.sin(2*self.th))*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (np.sin(self.th)*(f_applied[2] - self.dth*self.phi[0]))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) + ((2*self.phi[1]*np.cos(self.th)**2 - self.phi[2]*np.sin(2*self.th))*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) + (2*self.phi[1]*(f_applied[2] - self.dth*self.phi[0])*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2 - (self.phi[1]*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) + (self.dth**2*np.sin(self.th)*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) + (2*self.phi[1]*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0])*(self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) - (self.dth**2*np.cos(self.th)*(self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])), ((2*self.phi[1]*np.cos(2*self.th) - 2*self.phi[2]*np.sin(2*self.th))*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - ((2*self.phi[2]*np.cos(self.th)**2 - 2*self.phi[2] + self.phi[1]*np.sin(2*self.th))*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (np.cos(self.th)*(f_applied[2] - self.dth*self.phi[0]))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) + (2*self.phi[2]*(f_applied[2] - self.dth*self.phi[0])*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2 - (self.phi[2]*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) + (self.dth**2*np.cos(self.th)*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) + (2*self.phi[2]*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0])*(self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) + (self.dth**2*np.sin(self.th)*(self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])), ((np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(2*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) - (((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0])*(self.phi[0]*self.phi[3] - self.phi[1]**2*np.cos(self.th)**2 + self.phi[2]**2*np.cos(self.th)**2 - self.phi[2]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2 - ((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0])/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) - (self.phi[0]*(f_applied[2] - self.dth*self.phi[0])*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2],
                [0, 0, ((2*np.cos(self.th)*np.sin(self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - 2*np.cos(self.th)*np.sin(self.th)*self.phi[2]**2)*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - ((- 2*np.cos(2*self.th)*self.phi[1]**2 + 4*np.sin(2*self.th)*self.phi[1]*self.phi[2] + 2*np.cos(2*self.th)*self.phi[2]**2)*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - ((f_applied[2] - self.dth*self.phi[0])*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) - (self.dth**2*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) + (self.dth**2*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])),            -(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)/(2*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])), -(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]), (self.dth*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (self.phi[0]*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) + (2*self.dth*(self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])), (self.phi[3]*(f_applied[2] - self.dth*self.phi[0])*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2 - (pos_x*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (pos_y*(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (self.phi[3]*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (self.dth*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) - ((np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(2*self.phi[0]**2*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0])*(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]**2*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) + (self.phi[3]*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) + (self.phi[3]*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0])*(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2), (np.cos(self.th)*(f_applied[2] - self.dth*self.phi[0]))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) + ((2*self.phi[1] - 2*self.phi[1]*np.cos(self.th)**2 + self.phi[2]*np.sin(2*self.th))*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) + ((2*self.phi[2]*np.cos(2*self.th) + 2*self.phi[1]*np.sin(2*self.th))*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (2*self.phi[1]*(f_applied[2] - self.dth*self.phi[0])*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2 - (self.phi[1]*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) - (2*self.phi[1]*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0])*(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) + (self.dth**2*np.cos(self.th)*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) + (self.dth**2*np.sin(self.th)*(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])),         ((2*self.phi[1]*np.cos(2*self.th) - 2*self.phi[2]*np.sin(2*self.th))*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (np.sin(self.th)*(f_applied[2] - self.dth*self.phi[0]))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) + ((2*self.phi[2]*np.cos(self.th)**2 + self.phi[1]*np.sin(2*self.th))*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (2*self.phi[2]*(f_applied[2] - self.dth*self.phi[0])*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2 - (self.phi[2]*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) - (2*self.phi[2]*((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0])*(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) + (self.dth**2*np.cos(self.th)*(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])) - (self.dth**2*np.sin(self.th)*(np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2))/(2*self.phi[0]*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])), ((np.sin(2*self.th)*self.phi[1]**2 + 2*np.cos(2*self.th)*self.phi[1]*self.phi[2] - np.sin(2*self.th)*self.phi[2]**2)*((self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th))*self.dth**2 + f_applied[0] - pos_x*self.phi[0]))/(2*(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2) - ((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0])/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) + (((self.phi[2]*np.cos(self.th) + self.phi[1]*np.sin(self.th))*self.dth**2 + f_applied[1] - pos_y*self.phi[0])*(self.phi[2]**2*np.cos(self.th)**2 - self.phi[1]**2*np.cos(self.th)**2 - self.phi[0]*self.phi[3] + self.phi[1]**2 + self.phi[1]*self.phi[2]*np.sin(2*self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2 + (self.phi[0]*(f_applied[2] - self.dth*self.phi[0])*(self.phi[1]*np.cos(self.th) - self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2],
f_applied[0]*self.phi[1]*np.cos(self.th) + f_applied[1]*self.phi[2]*np.cos(self.th) - f_applied[0]*self.phi[2]*np.sin(self.th) + f_applied[1]*self.phi[1]*np.sin(self.th) - pos_x*self.phi[0]*self.phi[1]*np.cos(self.th) - pos_y*self.phi[0]*self.phi[2]*np.cos(self.th) + pos_x*self.phi[0]*self.phi[2]*np.sin(self.th) - pos_y*self.phi[0]*self.phi[1]*np.sin(self.th))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]),                                       (self.phi[0]*self.phi[2]*np.cos(self.th) + self.phi[0]*self.phi[1]*np.sin(self.th))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]),                                       -(self.phi[0]*self.phi[1]*np.cos(self.th) - self.phi[0]*self.phi[2]*np.sin(self.th))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]),                                                                                                                                                                                                                                                                                                             self.phi[0]**2/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phiself.dth*self.phi[0] - f_applied[2] + pos_x*self.phi[2]*np.cos(self.th) - pos_y*self.phi[1]*np.cos(self.th) + pos_x*self.phi[1]*np.sin(self.th) + pos_y*self.phi[2]*np.sin(self.th))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) - (self.phi[3]*(f_applied[2]*self.phi[0] - self.dth*self.phi[0]**2 + f_applied[0]*self.phi[2]*np.cos(self.th) - f_applied[1]*self.phi[1]*np.cos(self.th) + f_applied[0]*self.phi[1]*np.sin(self.th) + f_applied[1]*self.phi[2]*np.sin(self.th) - pos_x*self.phi[0]*self.phi[2]*np.cos(self.th) + pos_y*self.phi[0]*self.phi[1]*np.cos(self.th) - pos_x*self.phi[0]*self.phi[1]*np.sin(self.th) - pos_y*self.phi[0]*self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phif_applied[1]*np.cos(self.th) - f_applied[0]*np.sin(self.th) - pos_y*self.phi[0]*np.cos(self.th) + pos_x*self.phi[0]*np.sin(self.th))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]) + (2*self.phi[1]*(f_applied[2]*self.phi[0] - self.dth*self.phi[0]**2 + f_applied[0]*self.phi[2]*np.cos(self.th) - f_applied[1]*self.phi[1]*np.cos(self.th) + f_applied[0]*self.phi[1]*np.sin(self.th) + f_applied[1]*self.phi[2]*np.sin(self.th) - pos_x*self.phi[0]*self.phi[2]*np.cos(self.th) + pos_y*self.phi[0]*self.phi[1]*np.cos(self.th) - pos_x*self.phi[0]*self.phi[1]*np.sin(self.th) - pos_y*self.phi[0]*self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phiself.phi[2]*(f_applied[2]*self.phi[0] - self.dth*self.phi[0]**2 + f_applied[0]*self.phi[2]*np.cos(self.th) - f_applied[1]*self.phi[1]*np.cos(self.th) + f_applied[0]*self.phi[1]*np.sin(self.th) + f_applied[1]*self.phi[2]*np.sin(self.th) - pos_x*self.phi[0]*self.phi[2]*np.cos(self.th) + pos_y*self.phi[0]*self.phi[1]*np.cos(self.th) - pos_x*self.phi[0]*self.phi[1]*np.sin(self.th) - pos_y*self.phi[0]*self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2 - (f_applied[0]*np.cos(self.th) + f_applied[1]*np.sin(self.th) - pos_x*self.phi[0]*np.cos(self.th) - pos_y*self.phi[0]*np.sin(self.th))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3]),                                                                                                                                                                                                                                                         -(self.phi[0]*(f_applied[2]*self.phi[0] - self.dth*self.phi[0]**2 + f_applied[0]*self.phi[2]*np.cos(self.th) - f_applied[1]*self.phi[1]*np.cos(self.th) + f_applied[0]*self.phi[1]*np.sin(self.th) + f_applied[1]*self.phi[2]*np.sin(self.th) - pos_x*self.phi[0]*self.phi[2]*np.cos(self.th) + pos_y*self.phi[0]*self.phi[1]*np.cos(self.th) - pos_x*self.phi[0]*self.phi[1]*np.sin(self.th) - pos_y*self.phi[0]*self.phi[2]*np.sin(self.th)))/(self.phi[1]**2 + self.phi[2]**2 - self.phi[0]*self.phi[3])**2],


                [0, 0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          0,                                                                                                   0,                                                                                                    0,                                                                                                                                                                                                                                                                                                                                           0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 0]])

        dq = (np.array([self.dx, self.dy, self.dth]).reshape(-1,1))
        self.accel =   np.matmul(linalg.inv(self.M),f_applied.reshape(-1,1) - np.matmul(self.C,dq)-dq*self.N)

    def update_matrix(self):
        self.M = np.array([[self.phi[0], 0, -self.phi[1]*np.sin(self.th)-self.phi[2]*np.cos(self.th)],
                    [0, self.phi[0], self.phi[1]*np.cos(self.th)-self.phi[2]*np.sin(self.th)],
                    [-self.phi[1]*np.sin(self.th)-self.phi[2]*np.cos(self.th),   self.phi[1]*np.cos(self.th)-self.phi[2]*np.sin(self.th), self.phi[3]]])
        
        self.C = np.array([[0, 0,  self.dth*(self.phi[2]*np.sin(self.th)-self.phi[1]*np.cos(self.th))],
                        [0, 0, -self.dth*(self.phi[2]*np.cos(self.th)+self.phi[1]*np.sin(self.th))],
                        [0, 0, 0]])
        
        self.N = self.phi[0]*1.4
        self.Lambda = np.array([-np.sin(self.th), np.cos(self.th), 0])
        self.d_Lambda = np.array([-np.cos(self.th)*self.dth, -np.sin(self.th)*self.dth, 0])


cart = cart_dynamic_model(10.0,0.3,0.0,1.5,0.0,0.0,0.0)
R_k = np.eye(6)*0.1
Q_k = np.eye(9)*0.2
P_k = np.eye(9)*(np.array([1, 1, 1, 1, 1, 1, 20, 5, 5])).reshape(-1,1)
H_k = np.array([[1,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0], [0,0,0,0,1,0,0,0,0], [0,0,0,0,0,1,0,0,0]])
hat_vec = np.array([0,0,0,0,0,0,cart.phi[0],cart.phi[1],cart.phi[2]])
K_k = np.zeros((9,6))
d_P_k = np.zeros((9,9))
parameters = Point()
cp_point = Point()
cp_point.x = 0.00
cp_point.y = 0.00
cp_point.z = 0.00


def getKey():
    # Get key function is used to receive user interaction with the keyboard through the terminal in which "drive_wheel" is running
    tty.setraw(sys.stdin.fileno())
    rlist, _, _ = select.select([sys.stdin], [], [], 0.1)
    if rlist:
        key = sys.stdin.read(1)
    else:
        key = ''

    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
    return key

def estimator(data):
    global cart_pose
    global cart
    global cp_wrench
    global cp_point
    global R_k
    global Q_k
    global P_k
    global H_k
    global hat_vec
    global K_k
    global d_P_k
    
    cart.update_matrix()
    cart.dynamics(cp_point.x,cp_point.y,np.array([cp_wrench[0],0,cp_wrench[5]]))

    if np.abs(cart.dx) > 0.15:
        d_P_k = np.matmul(cart.F[0:9,0:9],P_k) + np.matmul(P_k,np.transpose(cart.F[0:9,0:9])) + Q_k
        K_k = np.matmul(P_k[0:9,0:6],linalg.inv(P_k[0:6,0:6] + R_k))
        # K_k = np.matmul(P_k[0:9,0:6],linalg.inv(R_k))
        P_k = P_k + d_P_k*cart.dt
        
        hat_vec = [cart.x + cart.dx*cart.dt,cart.y + cart.dy*cart.dt,cart.th + cart.dth*cart.dt,cart.dx + cart.accel[0,0],cart.dy + cart.accel[1,0],cart.dth + cart.accel[2,0],cart.phi[0], cart.phi[1], cart.phi[2]]

        
        

        r = R.from_quat([data.pose.orientation.x, data.pose.orientation.y, data.pose.orientation.z, data.pose.orientation.w])
        ang = r.as_euler('xyz', degrees=False)
        cart.x = data.pose.position.x
        cart.y = data.pose.position.y
        cart.th = ang[2]

        cart.dif = (np.array([cart.x, cart.y, cart.th, cart.dx, cart.dy, cart.dth]) - hat_vec[0:6])*1
        update = np.matmul(K_k,(cart.dif).reshape(-1,1))
        new_vals = cart.phi + np.array([update[6,0], update[7,0], update[8,0], 0])
        
        if new_vals[0] < 5:
            new_vals[0] = 5
        elif new_vals[0] > 100:
            new_vals[0] = 100
        if new_vals[1] < 1:
            new_vals[1] = 1
        elif new_vals[1] > new_vals[0]*0.6:
            new_vals[1] = new_vals[0]*0.6
        
        if new_vals[2] < -new_vals[0]*0.1:
            new_vals[2] = -new_vals[0]*0.1
        elif new_vals[2] > new_vals[0]*0.1:
            new_vals[2] = new_vals[0]*0.1

        new_vals[1] = 2
        new_vals[2] = -0.2

        cart.phi = new_vals

        
        parameters.x = cart.phi[0]
        parameters.y = cart.phi[1]
        parameters.z = cart.phi[2]
        pub_phi.publish(parameters)
        P_k = np.matmul((np.eye(9) - np.matmul(K_k,H_k)),P_k)




def save_cart_twist(data):
    global cart_twist
    cart_twist = data.twist
    global cart
    cart.dx = data.twist.linear.x
    cart.dy = data.twist.linear.y
    cart.dth = data.twist.angular.z

def ft_sensor(data):
    global cp_wrench
    # cp_wrench[0] = -data.wrench.force.x
    # cp_wrench[1] = data.wrench.force.y
    # cp_wrench[2] = data.wrench.force.z
    # cp_wrench[3] = data.wrench.torque.x
    # cp_wrench[4] = data.wrench.torque.y
    # cp_wrench[5] = data.wrench.torque.z

def joint_sensor(data):
    global cp_wrench
    cp_wrench[0] = data.force.x
    cp_wrench[1] = data.force.y
    cp_wrench[2] = data.force.z
    cp_wrench[3] = data.torque.x
    cp_wrench[4] = data.torque.y
    cp_wrench[5] = data.torque.z

def save_cart_cp_point(data):
    global cp_point
    cp_point.y = data.y
    print(cp_point)
    

def listener():
    # Listener is the initialization function and subscribes to the point value of the "find_ball" node and creates the publisher of twists

    rospy.init_node('Control_ridgeback_base', anonymous=True)

    rospy.Subscriber("/vrpn_client_node/Shopping_cart/pose", PoseStamped, estimator)
    rospy.Subscriber("/vrpn_client_node/Shopping_cart/twist", TwistStamped, save_cart_twist)
    rospy.Subscriber("/ft_unbias", WrenchStamped, ft_sensor)
    rospy.Subscriber("/joint_wrench_unbias", Wrench, joint_sensor)
    rospy.Subscriber("/cp_cart_point", Point, save_cart_cp_point)
    
    # global pub
    # global pub_ee_pose
    global pub_phi
    pub_phi = rospy.Publisher('/inertial_parameters', Point, queue_size=2)
    # ub_ee_pose = rospy.Publisher('/desire_ee_pose', Pose, queue_size=2)


    

if __name__ == '__main__':
    settings = termios.tcgetattr(sys.stdin)
    listener()

rate = rospy.Rate(10)


while not rospy.is_shutdown():


    # if update:
    #     pub.publish(twist)
    #     pub_ee_pose.publish(goal_Pose_ee)
    #     update = False
    rate.sleep()
    key = getKey()
    if key == '1':
        state = 1
        
    else:
        if (key == '\x03'):
            break